syntax = "proto3";
package quicksilver.epochs.v1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "quicksilver/epochs/v1/genesis.proto";

option go_package = "github.com/quicksilver-zone/quicksilver/x/epochs/types";

// Query defines the gRPC querier service.
service QueryService {
  // EpochInfos provide running epochInfos
  rpc EpochInfos(EpochInfosRequest) returns (EpochInfosResponse) {
    option (google.api.http).get = "/quicksilver/epochs/v1/epochs";
  }
  // CurrentEpoch provide current epoch of specified identifier
  rpc CurrentEpoch(CurrentEpochRequest) returns (CurrentEpochResponse) {
    option (google.api.http).get = "/quicksilver/epochs/v1/current_epoch";
  }
}

message EpochInfosRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message EpochInfosResponse {
  repeated EpochInfo epochs = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message CurrentEpochRequest {
  string identifier = 1;
}
message CurrentEpochResponse {
  int64 current_epoch = 1;
}
