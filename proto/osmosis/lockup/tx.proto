syntax = "proto3";
package osmosis.lockup;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "osmosis/lockup/lock.proto";

option go_package = "github.com/quicksilver-zone/quicksilver/third-party-chains/osmosis-types/lockup";

// Msg defines the Msg service.
service MsgService {
  // LockTokens lock tokens
  rpc LockTokens(LockTokensRequest) returns (LockTokensResponse);
  // BeginUnlockingAll begin unlocking all tokens
  rpc BeginUnlockingAll(BeginUnlockingAllRequest) returns (BeginUnlockingAllResponse);
  // BeginUnlocking begins unlocking tokens by lock ID
  rpc BeginUnlocking(BeginUnlockingRequest) returns (BeginUnlockingResponse);
  // MsgEditLockup edits the existing lockups by lock ID
  rpc ExtendLockup(ExtendLockupRequest) returns (ExtendLockupResponse);
  rpc ForceUnlock(ForceUnlockRequest) returns (ForceUnlockResponse);
  // SetRewardReceiverAddress edits the reward receiver for the given lock ID
  rpc SetRewardReceiverAddress(SetRewardReceiverAddressRequest) returns (SetRewardReceiverAddressResponse);
}

message LockTokensRequest {
  string owner = 1 [(gogoproto.moretags) = "yaml:\"owner\""];
  google.protobuf.Duration duration = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.jsontag) = "duration,omitempty",
    (gogoproto.moretags) = "yaml:\"duration\""
  ];
  repeated cosmos.base.v1beta1.Coin coins = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}
message LockTokensResponse {
  uint64 ID = 1;
}

message BeginUnlockingAllRequest {
  string owner = 1 [(gogoproto.moretags) = "yaml:\"owner\""];
}
message BeginUnlockingAllResponse {
  repeated PeriodLock unlocks = 1;
}

message BeginUnlockingRequest {
  string owner = 1 [(gogoproto.moretags) = "yaml:\"owner\""];
  uint64 ID = 2;
  // Amount of unlocking coins. Unlock all if not set.
  repeated cosmos.base.v1beta1.Coin coins = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}
message BeginUnlockingResponse {
  bool success = 1;
  uint64 unlockingLockID = 2;
}

// ExtendLockup extends the existing lockup's duration.
// The new duration is longer than the original.
message ExtendLockupRequest {
  string owner = 1 [(gogoproto.moretags) = "yaml:\"owner\""];
  uint64 ID = 2;

  // duration to be set. fails if lower than the current duration, or is
  // unlocking
  google.protobuf.Duration duration = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.jsontag) = "duration,omitempty",
    (gogoproto.moretags) = "yaml:\"duration\""
  ];

  // extend for other edit, e.g. cancel unlocking
}

message ExtendLockupResponse {
  bool success = 1;
}

// ForceUnlock unlocks locks immediately for
// addresses registered via governance.
message ForceUnlockRequest {
  string owner = 1 [(gogoproto.moretags) = "yaml:\"owner\""];
  uint64 ID = 2;
  // Amount of unlocking coins. Unlock all if not set.
  repeated cosmos.base.v1beta1.Coin coins = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message ForceUnlockResponse {
  bool success = 1;
}

message SetRewardReceiverAddressRequest {
  string owner = 1 [(gogoproto.moretags) = "yaml:\"owner\""];
  uint64 lockID = 2;
  string reward_receiver = 3 [(gogoproto.moretags) = "yaml:\"reward_receiver\""];
}
message SetRewardReceiverAddressResponse {
  bool success = 1;
}
